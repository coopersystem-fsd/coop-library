name: Test, build, and deploy

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: npm install, build, and lint
      run: |
        npm install
        npm run build
        npm test
      env:
        CI: true
    - name: Cache Composer packages
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Composer install and lint
      run: |
        composer install
        composer test
    - name: Build release
      if: success() && github.ref == 'refs/heads/dev'
      run: |
        npm run build:production
        composer install --no-dev
    - name: Deploy to staging
      if: success() && github.ref == 'refs/heads/dev'
      id: deploy
      uses: pendect/action-rsyncer@master
      env:
        DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
      with:
        flags: '-avzr --delete --exclude-from ".distignore" -e "ssh -p 22222"'
        options: ''
        src: '/'
        dst: 'platformcoop@platform.coop:/home/platformcoop/domains/stage.commons.platform.coop/public_html/wp-content/themes/learning-commons/'
      # env:
      #   FTP_SERVER: ${{ secrets.FTP_SERVER }}
      #   FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
      #   FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      #   METHOD: sftp
      #   PORT: ${{ secrets.FTP_PORT }}
      #   REMOTE_DIR: /domains/stage.commons.platform.coop/public_html/wp-content/themes/learning-commons
      #   ARGS: --dry-run --delete --exclude docs/ --exclude .cache-loader/ --exclude .git/ --exclude .circleci/ --exclude node_modules/ --exclude resources/assets/
    - name: Display status from deploy
      run: echo "${{ steps.deploy.outputs.status }}"
